<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FubarDev.WebDavServer</name>
    </assembly>
    <members>
        <member name="T:FubarDev.WebDavServer.AsyncLazy`1">
            <summary>
            Provides support for asynchronous lazy initialization. This type is fully threadsafe.
            </summary>
            <typeparam name="T">The type of object that is being asynchronously initialized.</typeparam>
        </member>
        <member name="F:FubarDev.WebDavServer.AsyncLazy`1._mutex">
            <summary>
            The synchronization object protecting <c>_instance</c>.
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.AsyncLazy`1._instance">
            <summary>
            The underlying lazy task.
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.AsyncLazy`1.#ctor(System.Func{System.Threading.Tasks.Task{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.AsyncLazy`1"/> class.
            </summary>
            <param name="factory">The asynchronous delegate that is invoked to produce the value when it is needed. May not be <c>null</c>.</param>
        </member>
        <member name="P:FubarDev.WebDavServer.AsyncLazy`1.Task">
            <summary>
            Gets the resulting task.
            </summary>
            <remarks>
            Starts the asynchronous factory method, if it has not already started.
            </remarks>
        </member>
        <member name="M:FubarDev.WebDavServer.AsyncLazy`1.GetAwaiter">
            <summary>
            Asynchronous infrastructure support. This method permits instances of <see cref="T:FubarDev.WebDavServer.AsyncLazy`1"/> to be await'ed.
            </summary>
            <returns>the task awaiter</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.AsyncLazy`1.ConfigureAwait(System.Boolean)">
            <summary>
            Asynchronous infrastructure support. This method permits instances of <see cref="T:FubarDev.WebDavServer.AsyncLazy`1"/> to be await'ed.
            </summary>
            <param name="continueOnCapturedContext">Continue on captured context?</param>
            <returns>The configured task awaiter</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.CollectionActionResultExtensions">
            <summary>
            Extension methods for the <see cref="T:FubarDev.WebDavServer.Engines.CollectionActionResult"/>
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.CollectionActionResultExtensions.Evaluate(FubarDev.WebDavServer.Engines.CollectionActionResult,FubarDev.WebDavServer.IWebDavContext)">
            <summary>
            Evaluate the result of a <see cref="T:FubarDev.WebDavServer.Engines.CollectionActionResult"/> and return a <see cref="T:FubarDev.WebDavServer.IWebDavResult"/> implementation object.
            </summary>
            <param name="collectionResult">The <see cref="T:FubarDev.WebDavServer.Engines.CollectionActionResult"/> to evaluate</param>
            <param name="context">The <see cref="T:FubarDev.WebDavServer.IWebDavContext"/> to create the response for</param>
            <returns>The created response</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Dispatchers.IWebDavClass">
            <summary>
            Base interface for all WebDAV class implementations.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.IWebDavClass.Version">
            <summary>
            Gets the version of the WebDAV class
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.IWebDavClass.HttpMethods">
            <summary>
            Gets the HTTP methods supported by this WebDAV class.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.IWebDavClass.WebDavContext">
            <summary>
            Gets the context for a request
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Dispatchers.IWebDavClass1">
            <summary>
            Interface for WebDAV class 1 support
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.Version">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.HttpMethods">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.WebDavContext">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.GetAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.HeadAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.PutAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.OptionsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.PropFindAsync(System.String,FubarDev.WebDavServer.Model.propfind,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.PropPatchAsync(System.String,FubarDev.WebDavServer.Model.propertyupdate,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.MkColAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.CopyAsync(System.String,System.Uri,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.MoveAsync(System.String,System.Uri,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass2.Version">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass2.HttpMethods">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass2.WebDavContext">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass2.LockAsync(System.String,FubarDev.WebDavServer.Model.lockinfo,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass2.RefreshLockAsync(System.String,FubarDev.WebDavServer.Model.Headers.IfHeader,FubarDev.WebDavServer.Model.Headers.TimeoutHeader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass2.UnlockAsync(System.String,FubarDev.WebDavServer.Model.Headers.LockTokenHeader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.EntryTarget.Name">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.EntryTarget.DestinationUrl">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.EntryTarget.SetPropertiesAsync(System.Collections.Generic.IEnumerable{FubarDev.WebDavServer.Props.IUntypedWriteableProperty},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.FileSystemTarget.Name">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.FileSystemTarget.DestinationUrl">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.MissingTarget.Name">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.MissingTarget.DestinationUrl">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.MissingTarget.CreateCollectionAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.CollectionExtensions.EnumerateEntries(FubarDev.WebDavServer.FileSystem.ICollection,System.Collections.Generic.IReadOnlyCollection{FubarDev.WebDavServer.FileSystem.IEntry},System.Int32)">
            <summary>
            Gets all entries of a collection recursively
            </summary>
            <param name="collection">The collection to get the entries from</param>
            <param name="children">Child items for the given <paramref name="collection"/></param>
            <param name="maxDepth">The maximum depth (0 = only entries of the <paramref name="collection"/>, but not of its sub collections)</param>
            <returns>An async enumerable to collect all the entries recursively</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.CollectionExtensions.EnumerateEntries(FubarDev.WebDavServer.FileSystem.ICollection,System.Int32)">
            <summary>
            Gets all entries of a collection recursively
            </summary>
            <param name="collection">The collection to get the entries from</param>
            <param name="maxDepth">The maximum depth (0 = only entries of the <paramref name="collection"/>, but not of its sub collections)</param>
            <returns>An async enumerable to collect all the entries recursively</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.FileSystem.ICollectionNode">
            <summary>
            A node representing all found children of a <see cref="T:FubarDev.WebDavServer.FileSystem.ICollection"/>
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.ICollectionNode.Collection">
            <summary>
            Gets the collection this node is for
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.ICollectionNode.Name">
            <summary>
            Gets the name of the node (usually the same as <see cref="P:FubarDev.WebDavServer.FileSystem.IEntry.Name"/> of <see cref="P:FubarDev.WebDavServer.FileSystem.ICollectionNode.Collection"/>)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.ICollectionNode.Nodes">
            <summary>
            Gets the sub collection nodes
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.ICollectionNode.Documents">
            <summary>
            Gets the documents of this collection node
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.FileSystem.IEntityTagEntry">
            <summary>
            Is implemented when a <see cref="T:FubarDev.WebDavServer.FileSystem.IDocument"/> or <see cref="T:FubarDev.WebDavServer.FileSystem.ICollection"/> allows native <see cref="T:FubarDev.WebDavServer.Model.Headers.EntityTag"/> support.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.IEntityTagEntry.ETag">
            <summary>
            Gets the <see cref="T:FubarDev.WebDavServer.Model.Headers.EntityTag"/> for a <see cref="T:FubarDev.WebDavServer.FileSystem.IDocument"/> or <see cref="T:FubarDev.WebDavServer.FileSystem.ICollection"/>
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.IEntityTagEntry.UpdateETagAsync(System.Threading.CancellationToken)">
            <summary>
            Enforces the update of an <see cref="T:FubarDev.WebDavServer.Model.Headers.EntityTag"/>
            </summary>
            <remarks>
            This is usually called when the <see cref="T:FubarDev.WebDavServer.FileSystem.IEntry"/> properties were changed.
            </remarks>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The new <see cref="T:FubarDev.WebDavServer.Model.Headers.EntityTag"/></returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Formatters.WebDavFormatterOptions">
            <summary>
            Options for the WebDAV XML output formatter
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Formatters.WebDavFormatterOptions.ContentType">
            <summary>
            Gets or sets the content type to send
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Formatters.WebDavFormatterOptions.NamespacePrefix">
            <summary>
            Gets or sets the namespace prefix to use
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IClass1Handler">
            <summary>
            Interface for a WebDAV class 1 handler
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IClass2Handler">
            <summary>
            Interface for a WebDAV class 2 handler
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.ICopyHandler">
            <summary>
            Interface for the <code>COPY</code> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.ICopyHandler.CopyAsync(System.String,System.Uri,System.Threading.CancellationToken)">
            <summary>
            Copies from the source to the destination
            </summary>
            <param name="sourcePath">The source to copy</param>
            <param name="destination">The destination to copy to</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IDeleteHandler">
            <summary>
            Interface for the <code>DELETE</code> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.IDeleteHandler.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the element at the given path
            </summary>
            <param name="path">The path to the element to delete</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IGetHandler">
            <summary>
            Interface for the <code>GET</code> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.IGetHandler.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the element at the given path
            </summary>
            <param name="path">The path to the element to get</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IHandler">
            <summary>
            The handler for a HTTP method for a given WebDAV class
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.IHandler.HttpMethods">
            <summary>
            Gets the HTTP methods that are processed by this handler
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IHeadHandler">
            <summary>
            Interface for the <code>HEAD</code> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.IHeadHandler.HeadAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the information about an element at the given path
            </summary>
            <param name="path">The path to the element to get the information for</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.ILockHandler">
            <summary>
            Interface for the <code>LOCK</code> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.ILockHandler.LockAsync(System.String,FubarDev.WebDavServer.Model.lockinfo,System.Threading.CancellationToken)">
            <summary>
            Creates a lock for the given <paramref name="path"/> using the information in <paramref name="info"/>.
            </summary>
            <param name="path">The path to create the lock for</param>
            <param name="info">The additional information used to create the lock</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.ILockHandler.RefreshLockAsync(System.String,FubarDev.WebDavServer.Model.Headers.IfHeader,FubarDev.WebDavServer.Model.Headers.TimeoutHeader,System.Threading.CancellationToken)">
            <summary>
            Refreshes a lock for the given <paramref name="path"/> using the lock identified by the <paramref name="ifHeader"/>.
            </summary>
            <param name="path">The path to create the lock for</param>
            <param name="ifHeader">The <code>If</code> header used to identify the lock</param>
            <param name="timeoutHeader">The new timeout values</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IMkColHandler">
            <summary>
            Interface for the <code>MKCOL</code> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.IMkColHandler.MkColAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a collection at the given path
            </summary>
            <param name="path">The path to the collection to create</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IMoveHandler">
            <summary>
            Interface for the <code>MOVE</code> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.IMoveHandler.MoveAsync(System.String,System.Uri,System.Threading.CancellationToken)">
            <summary>
            Moves from the source to the destination
            </summary>
            <param name="path">The source to move</param>
            <param name="destination">The destination to move to</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.CopyHandler.HttpMethods">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.CopyHandler.CopyAsync(System.String,System.Uri,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.DeleteHandler.HttpMethods">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.DeleteHandler.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.GetHeadHandler.HttpMethods">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.GetHeadHandler.GetAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.GetHeadHandler.HeadAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.LockHandler.HttpMethods">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.LockHandler.LockAsync(System.String,FubarDev.WebDavServer.Model.lockinfo,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.MkColHandler.HttpMethods">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.MkColHandler.MkColAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.MoveHandler.HttpMethods">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.MoveHandler.MoveAsync(System.String,System.Uri,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.OptionsHandler.HttpMethods">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.OptionsHandler.OptionsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.PropFindHandler.HttpMethods">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.PropFindHandler.PropFindAsync(System.String,FubarDev.WebDavServer.Model.propfind,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.Impl.PropFindHandlerOptions">
            <summary>
            Options for <see cref="T:FubarDev.WebDavServer.Handlers.Impl.PropFindHandler"/>
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.PropFindHandlerOptions.UseAbsoluteHref">
            <summary>
            Gets or sets a value indicating whether the PROPFIND handler should return absolute href values.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.PropFindHandlerOptions.OmitLockOwner">
            <summary>
            Gets or sets a value indicating whether the handler should omit the <code>owner</code> element of an <code>activelock</code> element.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.PropFindHandlerOptions.OmitLockToken">
            <summary>
            Gets or sets a value indicating whether the handler should omit the <code>locktoken</code> element of an <code>activelock</code> element.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.PropPatchHandler.HttpMethods">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.PropPatchHandler.PropPatchAsync(System.String,FubarDev.WebDavServer.Model.propertyupdate,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.PutHandler.HttpMethods">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.PutHandler.PutAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IOptionsHandler">
            <summary>
            Interface for the <code>OPTIONS</code> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.IOptionsHandler.OptionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Queries the options for a given path.
            </summary>
            <remarks>
            This is used to identify the WebDAV capabilities at a given URL.
            </remarks>
            <param name="path">The root-relataive file system path to query the options for</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IPropFindHandler">
            <summary>
            Interface for the <code>PROPFIND</code> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.IPropFindHandler.PropFindAsync(System.String,FubarDev.WebDavServer.Model.propfind,System.Threading.CancellationToken)">
            <summary>
            Queries properties (dead or live) for a given <paramref name="path"/>.
            </summary>
            <param name="path">The path to query the properties for</param>
            <param name="request">Some information about the properties to query</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IPropPatchHandler">
            <summary>
            Interface for the <code>PROPPATCH</code> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.IPropPatchHandler.PropPatchAsync(System.String,FubarDev.WebDavServer.Model.propertyupdate,System.Threading.CancellationToken)">
            <summary>
            Patches (sets or removes) properties from the given <paramref name="path"/>
            </summary>
            <param name="path">The path to patch the properties for</param>
            <param name="request">The properties to patch</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IPutHandler">
            <summary>
            Interface for the <code>PUT</code> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.IPutHandler.PutAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a document at the given <paramref name="path"/>
            </summary>
            <param name="path">The path where to create or update the document</param>
            <param name="data">The data to write to the new or existing document</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IUnlockHandler">
            <summary>
            Interface for the <code>UNLOCK</code> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.IUnlockHandler.UnlockAsync(System.String,FubarDev.WebDavServer.Model.Headers.LockTokenHeader,System.Threading.CancellationToken)">
            <summary>
            Removes a LOCK with the given <paramref name="stateToken"/> from the given <paramref name="path"/>
            </summary>
            <param name="path">The path to remove the lock for</param>
            <param name="stateToken">The state token of the lock to remove</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.ISystemClock">
            <summary>
            Interface for querying the system clock
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.ISystemClock.UtcNow">
            <summary>
            Gets the <see cref="P:System.DateTime.UtcNow"/>
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.IWebDavContext">
            <summary>
            The WebDAV request context
            </summary>
            <remarks>
            This is the equivalent of ASP.NET Cores <code>HttpContext</code>
            </remarks>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.RequestProtocol">
            <summary>
            Gets the request protocol (<code>http</code> or <code>https</code>)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.RelativeRequestUrl">
            <summary>
            Gets the relative request URL (e.g. <code>/webdav/test.txt</code>)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.AbsoluteRequestUrl">
            <summary>
            Gets the absolute request URL (e.g. http://localhost/webdav/test.txt)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.BaseUrl">
            <summary>
            Gets the base URL of the web service (e.g. http://localhost/webdav/)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.RootUrl">
            <summary>
            Gets the root URL of the web service (e.g. http://localhost/)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.DetectedClient">
            <summary>
            Gets the parsed user agent
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.RequestHeaders">
            <summary>
            Gets the request headers (partially parsed)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.User">
            <summary>
            Gets the authenticated user
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.ActiveLock">
            <summary>
            A generic implementation of an active lock
            </summary>
            <remarks>
            The <see cref="T:FubarDev.WebDavServer.Locking.ILockManager"/> implementation might use a different implementation
            of an <see cref="T:FubarDev.WebDavServer.Locking.IActiveLock"/>.
            </remarks>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ActiveLock.#ctor(FubarDev.WebDavServer.Locking.ILock,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.ActiveLock"/> class.
            </summary>
            <param name="l">The lock to create this active lock from</param>
            <param name="issued">The date/time when this lock was issued</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ActiveLock.#ctor(FubarDev.WebDavServer.Locking.ILock,System.DateTime,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.ActiveLock"/> class.
            </summary>
            <param name="l">The lock to create this active lock from</param>
            <param name="issued">The date/time when this lock was issued</param>
            <param name="timeout">Override the timeout from the original lock (to enforce rounding)</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ActiveLock.#ctor(System.String,System.String,System.Boolean,System.Xml.Linq.XElement,FubarDev.WebDavServer.Locking.LockAccessType,FubarDev.WebDavServer.Locking.LockShareMode,System.TimeSpan,System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.ActiveLock"/> class.
            </summary>
            <param name="path">The file system path (root-relative) this lock should be applied to</param>
            <param name="href">The href this lock should be applied to (might be relative or absolute)</param>
            <param name="recursive">Must the lock be applied recursively to all children?</param>
            <param name="owner">The owner of the lock</param>
            <param name="accessType">The <see cref="T:FubarDev.WebDavServer.Locking.LockAccessType"/> of the lock</param>
            <param name="shareMode">The <see cref="T:FubarDev.WebDavServer.Locking.LockShareMode"/> of the lock</param>
            <param name="timeout">The lock timeout</param>
            <param name="issued">The date/time when this lock was issued</param>
            <param name="lastRefresh">The date/time of the last refresh</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ActiveLock.StateToken">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ActiveLock.Issued">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ActiveLock.LastRefresh">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ActiveLock.Expiration">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ActiveLock.ToString">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ActiveLock.Refresh(System.DateTime,System.TimeSpan)">
            <summary>
            Returns a new active lock whose new expiration date/time is recalculated using <paramref name="lastRefresh"/> and <paramref name="timeout"/>.
            </summary>
            <param name="lastRefresh">The date/time of the last refresh</param>
            <param name="timeout">The new timeout to apply to the lock</param>
            <returns>The new (refreshed) active lock</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.DefaultLockTimeRounding">
            <summary>
            The default rounding implementation
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.DefaultLockTimeRounding.#ctor(FubarDev.WebDavServer.Locking.DefaultLockTimeRoundingMode)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.DefaultLockTimeRounding"/> class.
            </summary>
            <param name="roundingMode">The rounding mode</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.DefaultLockTimeRounding.Round(System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.DefaultLockTimeRounding.Round(System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.DefaultLockTimeRoundingMode">
            <summary>
            The rounding modes for the default rounding mode implementation
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Locking.DefaultLockTimeRoundingMode.OneSecond">
            <summary>
            Round to the next second
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Locking.DefaultLockTimeRoundingMode.OneHundredMilliseconds">
            <summary>
            Round to the next 100 milliseconds
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.DefaultTimeoutPolicy">
            <summary>
            The default timeout policy
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.DefaultTimeoutPolicy.#ctor(Microsoft.Extensions.Options.IOptions{FubarDev.WebDavServer.Locking.DefaultTimeoutPolicyOptions})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.DefaultTimeoutPolicy"/> class.
            </summary>
            <param name="options">The options to configure this <see cref="T:FubarDev.WebDavServer.Locking.ITimeoutPolicy"/> implementation.</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.DefaultTimeoutPolicy.SelectTimeout(System.Collections.Generic.IReadOnlyCollection{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.DefaultTimeoutPolicyOptions">
            <summary>
            The options for the <see cref="T:FubarDev.WebDavServer.Locking.DefaultTimeoutPolicy"/>
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.DefaultTimeoutPolicyOptions.AllowInfiniteTimeout">
            <summary>
            Gets or sets a value indicating whether the timeout may be infinite
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.DefaultTimeoutPolicyOptions.MaxTimeout">
            <summary>
            Gets or sets the maximum timeout
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.IActiveLock">
            <summary>
            An interface for the information about an active lock
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.IActiveLock.StateToken">
            <summary>
            Gets the state token
            </summary>
            <remarks>
            This is always a valid URI (might be relative)
            </remarks>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.IActiveLock.Issued">
            <summary>
            Gets the timestamp when this lock was issued
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.IActiveLock.LastRefresh">
            <summary>
            Gets the timestamp when this lock was refreshed
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.IActiveLock.Expiration">
            <summary>
            Gets the timestamp when this lock expires
            </summary>
            <seealso cref="P:FubarDev.WebDavServer.Locking.ILock.Timeout"/>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.ILock">
            <summary>
            Interface for a requested lock
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ILock.Path">
            <summary>
            Gets the path the lock is for
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ILock.Href">
            <summary>
            Gets the href the lock is for
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ILock.Recursive">
            <summary>
            Gets a value indicating whether the lock must be applied recusively
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ILock.AccessType">
            <summary>
            Gets the access type of the lock
            </summary>
            <seealso cref="T:FubarDev.WebDavServer.Locking.LockAccessType"/>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ILock.ShareMode">
            <summary>
            Gets the share mode of the lock
            </summary>
            <seealso cref="T:FubarDev.WebDavServer.Locking.LockShareMode"/>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ILock.Timeout">
            <summary>
            Gets the timeout of the lock
            </summary>
            <remarks>
            The lock is automatically released after the expiration of the timeout.
            </remarks>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ILock.GetOwner">
            <summary>
            Gets the XML identifying the owner of the lock
            </summary>
            <returns>
            The XML identifying the owner of the lock
            </returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.ILockManager">
            <summary>
            The interface for a lock manager
            </summary>
        </member>
        <member name="E:FubarDev.WebDavServer.Locking.ILockManager.LockAdded">
            <summary>
            Gets called when a lock was added
            </summary>
        </member>
        <member name="E:FubarDev.WebDavServer.Locking.ILockManager.LockReleased">
            <summary>
            Gets called when a lock was released
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ILockManager.Cost">
            <summary>
            Gets the cost of a LOCK/UNLOCK or lock discovery operation
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ILockManager.LockAsync(FubarDev.WebDavServer.Locking.ILock,System.Threading.CancellationToken)">
            <summary>
            Tries to issue a lock
            </summary>
            <param name="l">The lock to issue</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>Either the list of locks preventing issuing a lock or the active lock created</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ILockManager.LockImplicitAsync(FubarDev.WebDavServer.FileSystem.IFileSystem,System.Collections.Generic.IReadOnlyCollection{FubarDev.WebDavServer.Model.Headers.IfHeaderList},FubarDev.WebDavServer.Locking.ILock,System.Threading.CancellationToken)">
            <summary>
            Tries to find a lock identified by the <paramref name="ifHeaderLists"/> or creates a new one if none was found.
            </summary>
            <param name="rootFileSystem">The root file system to identify the lock for</param>
            <param name="ifHeaderLists">The <code>If</code> header lists that tries to identify the lock to use</param>
            <param name="lockRequirements">The requirements the found lock must meet</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>Either the list of locks preventing issuing a lock or the active lock created or reused</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ILockManager.RefreshLockAsync(FubarDev.WebDavServer.FileSystem.IFileSystem,FubarDev.WebDavServer.Model.Headers.IfHeader,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Tries to refresh a lock
            </summary>
            <param name="rootFileSystem">The root file system</param>
            <param name="ifHeader">The header that tries to identify the lock to refresh</param>
            <param name="timeout">The header containing the new timeouts</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>Either the list of locks preventing refreshing a lock or the refreshed lock</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ILockManager.ReleaseAsync(System.String,System.Uri,System.Threading.CancellationToken)">
            <summary>
            Releases a lock with the given state token
            </summary>
            <param name="path">The path to release the lock for</param>
            <param name="stateToken">The state token of the lock to release</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns><see langword="true" /> when there was a lock to remove</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ILockManager.GetLocksAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all active locks
            </summary>
            <remarks>
            Be aware that the locks could've been released in the mean time by a concurrent
            access or by the <see cref="T:FubarDev.WebDavServer.Locking.LockCleanupTask"/>.
            </remarks>
            <param name="cancellationToken">The cancellation token</param>
            <returns>Returns all active locks</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ILockManager.GetAffectedLocksAsync(System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Gets all active locks
            </summary>
            <remarks>
            Be aware that the locks could've been released in the mean time by a concurrent
            access or by the <see cref="T:FubarDev.WebDavServer.Locking.LockCleanupTask"/>.
            </remarks>
            <param name="path">The file system path to get the locks for</param>
            <param name="findChildren">Return all locks that are a child of the given <paramref name="path"/>?</param>
            <param name="findParents">Return all locks that are a parent of the given <paramref name="path"/>?</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>Returns all active locks</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.ILockTimeRounding">
            <summary>
            Interface for classes that want to implement custom rounding
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ILockTimeRounding.Round(System.DateTime)">
            <summary>
            The rounding implementation
            </summary>
            <param name="dt">The date and time to round</param>
            <returns>The new <see cref="T:System.DateTime"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ILockTimeRounding.Round(System.TimeSpan)">
            <summary>
            The rounding implementation
            </summary>
            <param name="ts">The time span to round</param>
            <returns>The new timestamp</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.ITimeoutPolicy">
            <summary>
            The policy to select the lock timeout
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ITimeoutPolicy.SelectTimeout(System.Collections.Generic.IReadOnlyCollection{System.TimeSpan})">
            <summary>
            Selects the timeout from the list of client requested timeouts.
            </summary>
            <param name="timeouts">The timeouts requested by the client</param>
            <returns>The timeout to use</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.Lock">
            <summary>
            A generic implementation of the <see cref="T:FubarDev.WebDavServer.Locking.ILock"/> interface.
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.Lock.#ctor(System.Uri,System.Uri,System.Boolean,System.Xml.Linq.XElement,FubarDev.WebDavServer.Locking.LockAccessType,FubarDev.WebDavServer.Locking.LockShareMode,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.Lock"/> class.
            </summary>
            <param name="path">The file system path (root-relative) this lock should be applied to</param>
            <param name="href">The href this lock should be applied to (might be relative or absolute)</param>
            <param name="recursive">Must the lock be applied recursively to all children?</param>
            <param name="owner">The owner of the lock</param>
            <param name="accessType">The <see cref="T:FubarDev.WebDavServer.Locking.LockAccessType"/> of the lock</param>
            <param name="shareMode">The <see cref="T:FubarDev.WebDavServer.Locking.LockShareMode"/> of the lock</param>
            <param name="timeout">The lock timeout</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.Lock.#ctor(System.String,System.String,System.Boolean,System.Xml.Linq.XElement,FubarDev.WebDavServer.Locking.LockAccessType,FubarDev.WebDavServer.Locking.LockShareMode,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.Lock"/> class.
            </summary>
            <param name="path">The file system path (root-relative) this lock should be applied to</param>
            <param name="href">The href this lock should be applied to (might be relative or absolute)</param>
            <param name="recursive">Must the lock be applied recursively to all children?</param>
            <param name="owner">The owner of the lock</param>
            <param name="accessType">The <see cref="T:FubarDev.WebDavServer.Locking.LockAccessType"/> of the lock</param>
            <param name="shareMode">The <see cref="T:FubarDev.WebDavServer.Locking.LockShareMode"/> of the lock</param>
            <param name="timeout">The lock timeout</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.Lock.#ctor(System.String,System.String,System.Boolean,System.Xml.Linq.XElement,System.String,System.String,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.Lock"/> class.
            </summary>
            <param name="path">The file system path (root-relative) this lock should be applied to</param>
            <param name="href">The href this lock should be applied to (might be relative or absolute)</param>
            <param name="recursive">Must the lock be applied recursively to all children?</param>
            <param name="owner">The owner of the lock</param>
            <param name="accessType">The <see cref="T:FubarDev.WebDavServer.Locking.LockAccessType"/> of the lock</param>
            <param name="shareMode">The <see cref="T:FubarDev.WebDavServer.Locking.LockShareMode"/> of the lock</param>
            <param name="timeout">The lock timeout</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.Lock.Path">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.Lock.Href">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.Lock.Recursive">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.Lock.Owner">
            <summary>
            Gets the XML specifying the owner of the lock.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.Lock.AccessType">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.Lock.ShareMode">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.Lock.Timeout">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.Lock.GetOwner">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.Lock.ToString">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.LockCleanupTask">
            <summary>
            A background task that removes expired locks
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockCleanupTask.#ctor(FubarDev.WebDavServer.ISystemClock,Microsoft.Extensions.Logging.ILogger{FubarDev.WebDavServer.Locking.LockCleanupTask})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.LockCleanupTask"/> class.
            </summary>
            <param name="systemClock">The system clock</param>
            <param name="logger">The logger for the cleanup task</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockCleanupTask.Add(FubarDev.WebDavServer.Locking.ILockManager,FubarDev.WebDavServer.Locking.IActiveLock)">
            <summary>
            Adds a lock to be tracked by this cleanup task.
            </summary>
            <param name="lockManager">The lock manager that created this active lock.</param>
            <param name="activeLock">The active lock to track</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockCleanupTask.Remove(FubarDev.WebDavServer.Locking.IActiveLock)">
            <summary>
            Removes the active lock so that it isn't tracked any more by this cleanup task.
            </summary>
            <param name="activeLock">The active lock to remove</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockCleanupTask.Dispose">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockCleanupTask.TimerExpirationCallback(System.Object)">
            <summary>
            The timer callback which removes an expired item
            </summary>
            <param name="state">The (unused) state</param>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.LockManagerOptions">
            <summary>
            The options for the <see cref="T:FubarDev.WebDavServer.Locking.ILockManager"/>
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockManagerOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.LockManagerOptions"/> class.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockManagerOptions.Rounding">
            <summary>
            Gets or sets the time rounding implementation
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockRefreshResult.#ctor(FubarDev.WebDavServer.Model.response)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.LockRefreshResult"/> class.
            </summary>
            <param name="errorResponse">The error to return</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockRefreshResult.#ctor(System.Collections.Generic.IReadOnlyCollection{FubarDev.WebDavServer.Locking.IActiveLock})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.LockRefreshResult"/> class.
            </summary>
            <param name="refreshedLocks">The active locks that could be refreshed</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockRefreshResult.RefreshedLocks">
            <summary>
            Gets the active lock when locking succeeded
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockRefreshResult.ErrorResponse">
            <summary>
            Gets the error response to return
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.LockReleaseStatus">
            <summary>
            Result of an UNLOCK
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Locking.LockReleaseStatus.Success">
            <summary>
            UNLOCK successful
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Locking.LockReleaseStatus.NoLock">
            <summary>
            No lock to release found
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Locking.LockReleaseStatus.InvalidLockRange">
            <summary>
            The given path doesn't match the scope of the lock
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.LockResult">
            <summary>
            The result of a locking operation
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockResult.#ctor(FubarDev.WebDavServer.Locking.IActiveLock)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.LockResult"/> class.
            </summary>
            <param name="activeLock">The active lock when locking succeeded</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockResult.#ctor(FubarDev.WebDavServer.Locking.LockStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.LockResult"/> class.
            </summary>
            <param name="conflictingLocks">The collection of locks preventing locking the given destination</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockResult.Lock">
            <summary>
            Gets the active lock when locking succeeded
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockResult.ConflictingLocks">
            <summary>
            Gets the collection of locks preventing locking the given destination.
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.LockStatus">
            <summary>
            A list of locks affecting a single lock (request)
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockStatus.#ctor(System.Collections.Generic.IReadOnlyCollection{FubarDev.WebDavServer.Locking.IActiveLock},System.Collections.Generic.IReadOnlyCollection{FubarDev.WebDavServer.Locking.IActiveLock},System.Collections.Generic.IReadOnlyCollection{FubarDev.WebDavServer.Locking.IActiveLock})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.LockStatus"/> class.
            </summary>
            <param name="referenceLocks">The locks found at the reference position</param>
            <param name="parentLocks">The locks found at positions higher in the hierarchy</param>
            <param name="childLocks">The locks found at positions lower in the hierarchy</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockStatus.Empty">
            <summary>
            Gets the empty lock status
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockStatus.ReferenceLocks">
            <summary>
            Gets the locks found at the reference position
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockStatus.ParentLocks">
            <summary>
            Gets the locks found at positions higher in the hierarchy
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockStatus.ChildLocks">
            <summary>
            Gets the locks found at positions lower in the hierarchy
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockStatus.IsEmpty">
            <summary>
            Gets a value indicating whether there where no locks found at all
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockStatus.Count">
            <summary>
            Gets the number of found locks
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockStatus.GetLocks">
            <summary>
            Gets all found locks
            </summary>
            <returns>all found locks</returns>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.IfHeaderList.ResourceTag">
            <summary>
            Gets the resource tag which is always an absolute URI
            </summary>
            <remarks>
            When a relative URI gets sent from the client, then it gets converted into an
            absolute URI.
            </remarks>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.IfHeaderList.RelativeHref">
            <summary>
            Gets the resource tag relative to the <see cref="P:FubarDev.WebDavServer.IWebDavContext.RootUrl"/>.
            </summary>
            <remarks>
            Might be an absolute URL when the host or scheme don't match.
            </remarks>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.IfHeaderList.Path">
            <summary>
            Gets the path to the destination relative to the <see cref="P:FubarDev.WebDavServer.IWebDavContext.BaseUrl"/>.
            </summary>
            <remarks>
            Might be an absolute URL when the host or scheme don't match.
            </remarks>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.IfHeaderList.Conditions">
            <summary>
            Gets the collection of conditions that must be satisfied by this list.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.IfHeaderList.RequiresEntityTag">
            <summary>
            Gets a value indicating whether this condition list requires the <see cref="T:FubarDev.WebDavServer.Model.Headers.EntityTag"/> of an <see cref="T:FubarDev.WebDavServer.FileSystem.IEntry"/> for
            the evaluation.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.IfHeaderList.RequiresStateToken">
            <summary>
            Gets a value indicating whether this condition list requires the <see cref="P:FubarDev.WebDavServer.Locking.IActiveLock.StateToken"/> for the evaluation.
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.Headers.RangeHeader">
            <summary>
            This class encapsualtes a HTTP range
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.RangeHeader.#ctor(System.String,FubarDev.WebDavServer.Model.Headers.RangeHeaderItem[])">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeader"/> class.
            </summary>
            <param name="unit">The unit of the range (currently only <code>bytes</code> is allowed)</param>
            <param name="rangeItems">The HTTP range items for this range</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.RangeHeader.Unit">
            <summary>
            Gets the unit for this HTTP range
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.RangeHeader.RangeItems">
            <summary>
            Gets the HTTP range items
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.RangeHeader.Parse(System.String)">
            <summary>
            Parses a <paramref name="range"/> into a new <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeader"/> instance
            </summary>
            <remarks>
            The range must be in the form <code>unit=(range)+</code>
            </remarks>
            <param name="range">The range to parse</param>
            <returns>The new <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeader"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.RangeHeader.Parse(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Parses the <paramref name="ranges"/> into a new <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeader"/> instance
            </summary>
            <remarks>
            The range must be in the form <code>unit=(range)+</code>
            </remarks>
            <param name="ranges">The ranges to parse</param>
            <returns>The new <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeader"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.RangeHeader.ToString">
            <summary>
            Returns the textual representation of this range.
            </summary>
            <remarks>
            The return value of this function can be parsed using <see cref="M:FubarDev.WebDavServer.Model.Headers.RangeHeader.Parse(System.String)"/>.
            </remarks>
            <returns>The textual representation of this range</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.RangeHeader.ToString(FubarDev.WebDavServer.Model.Headers.RangeHeaderItem)">
            <summary>
            Returns the textual representation of a single <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem"/>
            </summary>
            <remarks>
            The return value of this function looks like <code>unit range/length</code>
            </remarks>
            <param name="rangeItem">The <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem"/> to get the textual representation for</param>
            <returns>The textual representation of <paramref name="rangeItem"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.RangeHeader.ToString(FubarDev.WebDavServer.Model.Headers.RangeHeaderItem,System.Nullable{System.Int64})">
            <summary>
            Returns the textual representation of a single <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem"/>
            </summary>
            <remarks>
            The return value of this function looks like <code>unit range/length</code>
            </remarks>
            <param name="rangeItem">The <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem"/> to get the textual representation for</param>
            <param name="length">The length value to be used in the textual representation</param>
            <returns>The textual representation of <paramref name="rangeItem"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.RangeHeader.Normalize(System.Int64)">
            <summary>
            Normalize all byte ranges using the specified <paramref name="totalLength"/>
            </summary>
            <param name="totalLength">The length of the resource</param>
            <returns>The list of normalized byte ranges</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem">
            <summary>
            Range for a HTTP request or response
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem"/> struct.
            </summary>
            <param name="from">From byte</param>
            <param name="to">To byte</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem.From">
            <summary>
            Gets the start position
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem.To">
            <summary>
            Gets the end position
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem.Parse(System.String)">
            <summary>
            Parses a <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem"/> from a string
            </summary>
            <remarks>
            Allowed are: "*", "from-", "-to", "from-to"
            </remarks>
            <param name="rangeItem">The string to parse</param>
            <returns>The new <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem.ToString">
            <summary>
            Returns the textual representation of the HTTP range item
            </summary>
            <returns>the textual representation of the HTTP range item</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.propfind">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.propfind.Items">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.propfind.ItemsElementName">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.location">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.location.href">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.propstat">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.propstat.prop">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.propstat.status">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.propstat.error">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.propstat.responsedescription">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.propstat.location">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.prop">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.prop.Any">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.error">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.error.Items">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.error.ItemsElementName">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.errorLocktokensubmitted">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.errorLocktokensubmitted.href">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.errorNoconflictinglock">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.errorNoconflictinglock.href">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.ItemsChoiceType">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType.Item">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType.cannotmodifyprotectedproperty">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType.locktokenmatchesrequesturi">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType.locktokensubmitted">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType.noconflictinglock">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType.noexternalentities">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType.preservedliveproperties">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType.propfindfinitedepth">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.include">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.include.Any">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.lockentry">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.lockentry.lockscope">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.lockentry.locktype">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.lockscope">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.lockscope.Item">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.lockscope.ItemElementName">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.ItemChoiceType">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemChoiceType.exclusive">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemChoiceType.shared">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.locktype">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.locktype.Item">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.lockroot">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.lockroot.href">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.locktoken">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.locktoken.href">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.activelock">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.activelock.lockscope">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.activelock.locktype">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.activelock.depth">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.activelock.owner">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.activelock.timeout">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.activelock.locktoken">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.activelock.lockroot">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.activelockDepth">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.activelockDepth.Item0">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.activelockDepth.Item1">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.activelockDepth.infinity">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.propset">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.propset.prop">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.propremove">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.propremove.prop">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.ItemsChoiceType1">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType1.allprop">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType1.include">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType1.prop">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType1.propname">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.multistatus">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.multistatus.response">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.multistatus.responsedescription">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.response">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.response.href">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.response.Items">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.response.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.response.error">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.response.responsedescription">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.ItemsChoiceType2">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType2.href">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType2.propstat">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType2.status">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.propertyupdate">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.propertyupdate.Items">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.lockinfo">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.lockinfo.lockscope">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.lockinfo.locktype">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.lockinfo.owner">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.supportedlock">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.supportedlock.lockentry">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.supportedlockLockentry">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.supportedlockLockentry.lockscope">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.supportedlockLockentry.locktype">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.OK">
            <summary>
            The <code>OK</code> (200) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.Created">
            <summary>
            The <code>Created</code> (201) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.NoContent">
            <summary>
            The <code>No Content</code> (204) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.PartialContent">
            <summary>
            The <code>Partial Content</code> (206) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.MultiStatus">
            <summary>
            The <code>Multi-Status</code> (207) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.NotModified">
            <summary>
            The <code>Not Modified</code> (304) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.BadRequest">
            <summary>
            The <code>Bad Request</code> (400) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.Forbidden">
            <summary>
            The <code>Forbidden</code> (403) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.NotFound">
            <summary>
            The <code>Not Found</code> (404) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.MethodNotAllowed">
            <summary>
            The <code>Method Not Allowed</code> (405) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.Conflict">
            <summary>
            The <code>Conflict</code> (409) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.PreconditionFailed">
            <summary>
            The <code>Precondition Failed</code> (412) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.RequestUriTooLong">
            <summary>
            The <code>Request URI Too Long</code> (414) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.UnsupportedMediaType">
            <summary>
            The <code>Unsupported Media Type</code> (415) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.RequestedRangeNotSatisfiable">
            <summary>
            The <code>Requested Range Not Satisfiable</code> (416) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.UnprocessableEntity">
            <summary>
            The <code>Unprocessable Entity</code> (422) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.Locked">
            <summary>
            The <code>Locked</code> (423) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.FailedDependency">
            <summary>
            The <code>Failed Dependency</code> (424) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.NotImplemented">
            <summary>
            The <code>Not Implemented</code> (501) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.BadGateway">
            <summary>
            The <code>Bad Gateway</code> (502) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.InsufficientStorage">
            <summary>
            The <code>Insufficient Storage</code> (507) status code
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Properties.Resources">
            <summary>
              Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.ResourceManager">
            <summary>
              Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Culture">
            <summary>
              Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
              Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Arg_ArrayLengthsDiffer">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Array lengths must be the same. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Arg_ArrayPlusOffTooSmall">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Destination array is not long enough to copy all the items in the collection. Check array index and length. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Arg_BitArrayTypeUnsupported">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Only supported array types for CopyTo on BitArrays are Boolean[], Int32[] and Byte[]. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Arg_HSCapacityOverflow">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die HashSet capacity is too big. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Arg_HTCapacityOverflow">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Hashtable&apos;s capacity overflowed and went negative. Check load factor, capacity and the current size of the table. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Arg_InsufficientSpace">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Insufficient space in the target location to copy the information. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Arg_MultiRank">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Multi dimension array is not supported on this operation. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Arg_NonZeroLowerBound">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The lower bound of target array must be zero. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Arg_RankMultiDimNotSupported">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Only single dimensional arrays are supported for the requested action. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Arg_WrongType">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The value &apos;{0}&apos; is not of type &apos;{1}&apos; and cannot be used in this generic collection. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Argument_AddingDuplicate">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die An item with the same key has already been added. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Argument_ArrayTooLarge">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The input array length must not exceed Int32.MaxValue / {0}. Otherwise BitArray.Length would exceed Int32.MaxValue. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Argument_ImplementIComparable">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die At least one object must implement IComparable. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Argument_InvalidArgumentForComparison">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Type of argument is not compatible with the generic comparer. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Argument_InvalidArrayType">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Target array type is not compatible with the type of items in the collection. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Argument_InvalidOffLen">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.ArgumentOutOfRange_BiggerThanCollection">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Larger than collection size. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.ArgumentOutOfRange_Count">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Count must be positive and count must refer to a location within the string/array/collection. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.ArgumentOutOfRange_Index">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Index was out of range. Must be non-negative and less than the size of the collection. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.ArgumentOutOfRange_ListInsert">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Index must be within the bounds of the List. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.ArgumentOutOfRange_NeedNonNegNum">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Non-negative number required. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.ArgumentOutOfRange_NeedNonNegNumRequired">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Non-negative number required. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.ArgumentOutOfRange_SmallCapacity">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die capacity was less than the current size. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.CopyTo_ArgumentsTooSmall">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Destination array is not long enough to copy all the items in the collection. Check array index and length. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Create_TValueCollectionReadOnly">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The specified TValueCollection creates collections that have IsReadOnly set to true by default. TValueCollection must be a mutable ICollection. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.ExternalLinkedListNode">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The LinkedList node does not belong to current LinkedList. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.IndexOutOfRange">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Index {0} is out of range. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Invalid_Array_Type">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Target array type is not compatible with the type of items in the collection. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.InvalidOperation_EmptyQueue">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Queue empty. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.InvalidOperation_EmptyStack">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Stack empty. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.InvalidOperation_EnumEnded">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Enumeration already finished. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.InvalidOperation_EnumFailedVersion">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Collection was modified; enumeration operation may not execute. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.InvalidOperation_EnumNotStarted">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Enumeration has not started. Call MoveNext. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.InvalidOperation_EnumOpCantHappen">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Enumeration has either not started or has already finished. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.LinkedListEmpty">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The LinkedList is empty. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.LinkedListNodeIsAttached">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The LinkedList node already belongs to a LinkedList. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.NotSupported_KeyCollectionSet">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Mutating a key collection derived from a dictionary is not allowed. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.NotSupported_SortedListNestedWrite">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die This operation is not supported on SortedList nested types because they require modifying the original SortedList. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.NotSupported_ValueCollectionSet">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Mutating a value collection derived from a dictionary is not allowed. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.ReadOnly_Modification">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The collection is read-only ähnelt.
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.SystemClock">
            <summary>
            The default implementation of <see cref="T:FubarDev.WebDavServer.ISystemClock"/>
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.SystemClock.UtcNow">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.MimeTypesMap">
            <summary>
            Mime type map
            </summary>
            <remarks>
            Taken from the project https://github.com/hey-red/MimeTypesMap
            </remarks>
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.StreamView">
            <summary>
            This is some kind of a "View" to an underlying stream
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.StreamView.CanRead">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.StreamView.CanSeek">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.StreamView.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.StreamView.Length">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.StreamView.Position">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.StreamView.CreateAsync(System.IO.Stream,System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Creates a new stream view
            </summary>
            <remarks>
            The <paramref name="baseStream"/> must be at position 0.
            </remarks>
            <param name="baseStream">The underlying stream</param>
            <param name="position">The start position</param>
            <param name="length">The length of the data to be read from the underlying stream</param>
            <param name="ct">The cancellation token</param>
            <returns>The new stream view</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.StreamView.Flush">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.StreamView.Read(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.StreamView.Seek(System.Int64,System.IO.SeekOrigin)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.StreamView.SetLength(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.StreamView.Write(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.StreamView.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.UAParser.Device">
            <summary>
            Represents the physical device the user agent is using
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.Device.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs a Device instance
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.Device.IsSpider">
            <summary>
            Returns true if the device is likely to be a spider or a bot device
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.Device.Brand">
             <summary>
            The brand of the device 
             </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.Device.Family">
            <summary>
            The family of the device, if available
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.Device.Model">
            <summary>
            The model of the device, if available
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.Device.ToString">
            <summary>
            A readable description of the device
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.UAParser.OS">
            <summary>
            Represents the operating system the user agent runs on
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.OS.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructs an OS instance
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.OS.Family">
            <summary>
            The familiy of the OS
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.OS.Major">
            <summary>
            The major version of the OS, if available
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.OS.Minor">
            <summary>
            The minor version of the OS, if available
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.OS.Patch">
            <summary>
            The patch version of the OS, if available
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.OS.PatchMinor">
            <summary>
            The minor patch version of the OS, if available
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.OS.ToString">
            <summary>
            A readable description of the OS
            </summary>
            <returns></returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.UAParser.UserAgent">
            <summary>
            Represents a user agent, commonly a browser
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.UserAgent.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Construct a UserAgent instance 
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.UserAgent.Family">
            <summary>
            The family of user agent
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.UserAgent.Major">
            <summary>
            Major version of the user agent, if available
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.UserAgent.Minor">
            <summary>
            Minor version of the user agent, if available
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.UserAgent.Patch">
            <summary>
            Patch version of the user agent, if available
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.UserAgent.ToString">
            <summary>
            The user agent as a readbale string
            </summary>
            <returns></returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.UAParser.IUAParserOutput">
            <summary>
            Representing the parse results. Structure of this class aligns with the 
            ua-parser-output WebIDL structure defined in this document: https://github.com/ua-parser/uap-core/blob/master/docs/specification.md
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.IUAParserOutput.String">
            <summary>
            The user agent string, the input for the UAParser
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.IUAParserOutput.OS">
            <summary>
            The OS parsed from the user agent string
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.IUAParserOutput.Device">
            <summary>
            The Device parsed from the user agent string
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.IUAParserOutput.UA">
            <summary>
            The User Agent parsed from the user agent string
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.UAParser.ClientInfo">
            <summary>
            Represents the user agent client information resulting from parsing
            a user agent string
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.ClientInfo.String">
            <summary>
            The user agent string, the input for the UAParser
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.ClientInfo.OS">
            <summary>
            The OS parsed from the user agent string
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.ClientInfo.Device">
            <summary>
            The Device parsed from the user agent string
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.ClientInfo.UserAgent">
            <summary>
            The User Agent parsed from the user agent string
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.ClientInfo.UA">
            <summary>
            The User Agent parsed from the user agent string
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.ClientInfo.#ctor(System.String,FubarDev.WebDavServer.Utils.UAParser.OS,FubarDev.WebDavServer.Utils.UAParser.Device,FubarDev.WebDavServer.Utils.UAParser.UserAgent)">
            <summary>
            Constructs an instance of the ClientInfo with results of the user agent string parsing 
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.ClientInfo.ToString">
            <summary>
            A readable description of the user agent client information
            </summary>
            <returns></returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.UAParser.Parser">
            <summary>
            Represents a parser of a user agent string
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.Parser.FromYaml(System.String)">
            <summary>
            Returns a <see cref="T:FubarDev.WebDavServer.Utils.UAParser.Parser"/> instance based on the regex definitions in a yaml string
            </summary>
            <param name="yaml">a string containing yaml definitions of reg-ex</param>
            <returns>A <see cref="T:FubarDev.WebDavServer.Utils.UAParser.Parser"/> instance parsing user agent strings based on the regexes defined in the yaml string</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.Parser.FromYamlFile(System.String)">
            <summary>
            Returns a <see cref="T:FubarDev.WebDavServer.Utils.UAParser.Parser"/> instance based on the information in a yaml file
            </summary>
            <param name="path">the path to a yaml file containing regex definitions</param>
            <returns>A <see cref="T:FubarDev.WebDavServer.Utils.UAParser.Parser"/> instance parsing user agent strings based on the regexes defined in the yaml string</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.Parser.GetDefault">
            <summary>
            Returns a <see cref="T:FubarDev.WebDavServer.Utils.UAParser.Parser"/> instance based on the embedded regex definitions. 
            <remarks>The embedded regex definitions may be outdated. Consider passing in external yaml definitions using <see cref="M:FubarDev.WebDavServer.Utils.UAParser.Parser.FromYaml(System.String)"/> or
            <see cref="M:FubarDev.WebDavServer.Utils.UAParser.Parser.FromYamlFile(System.String)"/></remarks>
            </summary>
            <returns></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.Parser.Parse(System.String)">
            <summary>
            Parse a user agent string and obtain all client information
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.Parser.ParseOS(System.String)">
            <summary>
            Parse a user agent string and obtain the OS information
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.Parser.ParseDevice(System.String)">
            <summary>
            Parse a user agent string and obtain the device information
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.Parser.ParseUserAgent(System.String)">
            <summary>
            Parse a user agent string and obtain the UserAgent information
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.UAParser.MinimalYamlParser">
            <summary>
            Just enough string parsing to recognize the regexes.yaml file format. Introduced to remove
            dependency on large Yaml parsing lib. Note that a unittest ensures compatibility
            by ensuring regexes and properties are read similar to using the full yaml lib
            </summary>
        </member>
        <member name="T:System.Collections.Generic.MultiValueDictionary`2">
            <summary>
            A MultiValueDictionary can be viewed as a <see cref="T:System.Collections.IDictionary" /> that allows multiple 
            values for any given unique key. While the MultiValueDictionary API is 
            mostly the same as that of a regular <see cref="T:System.Collections.IDictionary" />, there is a distinction
            in that getting the value for a key returns a <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> of values
            rather than a single value associated with that key. Additionally, 
            there is functionality to allow adding or removing more than a single
            value at once. 
            
            The MultiValueDictionary can also be viewed as a IReadOnlyDictionary&lt;TKey,IReadOnlyCollection&lt;TValue&gt;t&gt;
            where the <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> is abstracted from the view of the programmer.
            
            For a read-only MultiValueDictionary, see <see cref="!:ILookup&lt;TKey, TValue&gt;" />.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="F:System.Collections.Generic.MultiValueDictionary`2.dictionary">
            <summary>
            The private dictionary that this class effectively wraps around
            </summary>
        </member>
        <member name="F:System.Collections.Generic.MultiValueDictionary`2.NewCollectionFactory">
            <summary>
            The function to construct a new <see cref="T:System.Collections.Generic.ICollection`1"/>
            </summary>
            <returns></returns>
        </member>
        <member name="F:System.Collections.Generic.MultiValueDictionary`2.version">
            <summary>
            The current version of this MultiValueDictionary used to determine MultiValueDictionary modification
            during enumeration
            </summary>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> 
            class that is empty, has the default initial capacity, and uses the default
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for <typeparamref name="TKey"/>.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> class that is 
            empty, has the specified initial capacity, and uses the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>
            for <typeparamref name="TKey"/>.
            </summary>
            <param name="capacity">Initial number of keys that the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> will allocate space for</param>
            <exception cref="T:System.ArgumentOutOfRangeException">capacity must be >= 0</exception>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> class 
            that is empty, has the default initial capacity, and uses the 
            specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
            </summary>
            <param name="comparer">Specified comparer to use for the <typeparamref name="TKey"/>s</param>
            <remarks>If <paramref name="comparer"/> is set to null, then the default <see cref="T:System.Collections.IEqualityComparer" /> for <typeparamref name="TKey"/> is used.</remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> class 
            that is empty, has the specified initial capacity, and uses the 
            specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
            </summary>
            <param name="capacity">Initial number of keys that the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> will allocate space for</param>
            <param name="comparer">Specified comparer to use for the <typeparamref name="TKey"/>s</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Capacity must be >= 0</exception>
            <remarks>If <paramref name="comparer"/> is set to null, then the default <see cref="T:System.Collections.IEqualityComparer" /> for <typeparamref name="TKey"/> is used.</remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.IReadOnlyCollection{`1}}})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> class that contains 
            elements copied from the specified IEnumerable&lt;KeyValuePair&lt;TKey, IReadOnlyCollection&lt;TValue&gt;&gt;&gt; and uses the 
            default <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for the <typeparamref name="TKey"/> type.
            </summary>
            <param name="enumerable">IEnumerable to copy elements into this from</param>
            <exception cref="T:System.ArgumentNullException">enumerable must be non-null</exception>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.IReadOnlyCollection{`1}}},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> class that contains 
            elements copied from the specified IEnumerable&lt;KeyValuePair&lt;TKey, IReadOnlyCollection&lt;TValue&gt;&gt;&gt; and uses the 
            specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
            </summary>
            <param name="enumerable">IEnumerable to copy elements into this from</param>
            <param name="comparer">Specified comparer to use for the <typeparamref name="TKey"/>s</param>
            <exception cref="T:System.ArgumentNullException">enumerable must be non-null</exception>
            <remarks>If <paramref name="comparer"/> is set to null, then the default <see cref="T:System.Collections.IEqualityComparer" /> for <typeparamref name="TKey"/> is used.</remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1">
            <summary>
            Creates a new new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> 
            class that is empty, has the default initial capacity, and uses the default
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for <typeparamref name="TKey"/>. The 
            internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <exception cref="T:System.InvalidOperationException"><typeparamref name="TValueCollection"/> must not have
            IsReadOnly set to true by default.</exception>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Int32)">
            <summary>
            Creates a new new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> 
            class that is empty, has the specified initial capacity, and uses the default
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for <typeparamref name="TKey"/>. The 
            internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="capacity">Initial number of keys that the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> will allocate space for</param>
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Capacity must be >= 0</exception>
            <exception cref="T:System.InvalidOperationException"><typeparamref name="TValueCollection"/> must not have
            IsReadOnly set to true by default.</exception>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Creates a new new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> 
            class that is empty, has the default initial capacity, and uses the specified
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for <typeparamref name="TKey"/>. The 
            internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="comparer">Specified comparer to use for the <typeparamref name="TKey"/>s</param>
            <exception cref="T:System.InvalidOperationException"><typeparamref name="TValueCollection"/> must not have
            IsReadOnly set to true by default.</exception>
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <remarks>If <paramref name="comparer"/> is set to null, then the default <see cref="T:System.Collections.IEqualityComparer" /> for <typeparamref name="TKey"/> is used.</remarks>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Creates a new new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> 
            class that is empty, has the specified initial capacity, and uses the specified
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for <typeparamref name="TKey"/>. The 
            internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="capacity">Initial number of keys that the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> will allocate space for</param>
            <param name="comparer">Specified comparer to use for the <typeparamref name="TKey"/>s</param>
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <exception cref="T:System.InvalidOperationException"><typeparamref name="TValueCollection"/> must not have
            IsReadOnly set to true by default.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Capacity must be >= 0</exception>
            <remarks>If <paramref name="comparer"/> is set to null, then the default <see cref="T:System.Collections.IEqualityComparer" /> for <typeparamref name="TKey"/> is used.</remarks>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.IReadOnlyCollection{`1}}})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> class that contains 
            elements copied from the specified IEnumerable&lt;KeyValuePair&lt;TKey, IReadOnlyCollection&lt;TValue&gt;&gt;&gt;
            and uses the default <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for the <typeparamref name="TKey"/> type.
            The internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="enumerable">IEnumerable to copy elements into this from</param>
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <exception cref="T:System.InvalidOperationException"><typeparamref name="TValueCollection"/> must not have
            IsReadOnly set to true by default.</exception>
            <exception cref="T:System.ArgumentNullException">enumerable must be non-null</exception>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.IReadOnlyCollection{`1}}},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> class that contains 
            elements copied from the specified IEnumerable&lt;KeyValuePair&lt;TKey, IReadOnlyCollection&lt;TValue&gt;&gt;&gt;
            and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for the <typeparamref name="TKey"/> type.
            The internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="enumerable">IEnumerable to copy elements into this from</param>
            <param name="comparer">Specified comparer to use for the <typeparamref name="TKey"/>s</param>
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <exception cref="T:System.InvalidOperationException"><typeparamref name="TValueCollection"/> must not have
            IsReadOnly set to true by default.</exception>
            <exception cref="T:System.ArgumentNullException">enumerable must be non-null</exception>
            <remarks>If <paramref name="comparer"/> is set to null, then the default <see cref="T:System.Collections.IEqualityComparer" /> for <typeparamref name="TKey"/> is used.</remarks>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Func{``0})">
            <summary>
            Creates a new new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> 
            class that is empty, has the default initial capacity, and uses the default
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for <typeparamref name="TKey"/>. The 
            internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="collectionFactory">A function to create a new <see cref="T:System.Collections.Generic.ICollection`1"/> to use
            in the internal dictionary store of this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />.</param>
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <exception cref="T:System.InvalidOperationException"><paramref name="collectionFactory"/> must create collections with
            IsReadOnly set to true by default.</exception>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Int32,System.Func{``0})">
            <summary>
            Creates a new new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> 
            class that is empty, has the specified initial capacity, and uses the default
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for <typeparamref name="TKey"/>. The 
            internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="capacity">Initial number of keys that the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> will allocate space for</param>
            <param name="collectionFactory">A function to create a new <see cref="T:System.Collections.Generic.ICollection`1"/> to use
            in the internal dictionary store of this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />.</param> 
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Capacity must be >= 0</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="collectionFactory"/> must create collections with
            IsReadOnly set to true by default.</exception>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Collections.Generic.IEqualityComparer{`0},System.Func{``0})">
            <summary>
            Creates a new new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> 
            class that is empty, has the default initial capacity, and uses the specified
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for <typeparamref name="TKey"/>. The 
            internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="comparer">Specified comparer to use for the <typeparamref name="TKey"/>s</param>
            <param name="collectionFactory">A function to create a new <see cref="T:System.Collections.Generic.ICollection`1"/> to use
            in the internal dictionary store of this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />.</param> 
            <exception cref="T:System.InvalidOperationException"><paramref name="collectionFactory"/> must create collections with
            IsReadOnly set to true by default.</exception>
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <remarks>If <paramref name="comparer"/> is set to null, then the default <see cref="T:System.Collections.IEqualityComparer" /> for <typeparamref name="TKey"/> is used.</remarks>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Int32,System.Collections.Generic.IEqualityComparer{`0},System.Func{``0})">
            <summary>
            Creates a new new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> 
            class that is empty, has the specified initial capacity, and uses the specified
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for <typeparamref name="TKey"/>. The 
            internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="capacity">Initial number of keys that the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> will allocate space for</param>
            <param name="comparer">Specified comparer to use for the <typeparamref name="TKey"/>s</param>
            <param name="collectionFactory">A function to create a new <see cref="T:System.Collections.Generic.ICollection`1"/> to use
            in the internal dictionary store of this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />.</param> 
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <exception cref="T:System.InvalidOperationException"><paramref name="collectionFactory"/> must create collections with
            IsReadOnly set to true by default.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Capacity must be >= 0</exception>
            <remarks>If <paramref name="comparer"/> is set to null, then the default <see cref="T:System.Collections.IEqualityComparer" /> for <typeparamref name="TKey"/> is used.</remarks>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.IReadOnlyCollection{`1}}},System.Func{``0})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> class that contains 
            elements copied from the specified IEnumerable&lt;KeyValuePair&lt;TKey, IReadOnlyCollection&lt;TValue&gt;&gt;&gt;
            and uses the default <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for the <typeparamref name="TKey"/> type.
            The internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="enumerable">IEnumerable to copy elements into this from</param>
            <param name="collectionFactory">A function to create a new <see cref="T:System.Collections.Generic.ICollection`1"/> to use
            in the internal dictionary store of this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />.</param> 
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <exception cref="T:System.InvalidOperationException"><paramref name="collectionFactory"/> must create collections with
            IsReadOnly set to true by default.</exception>
            <exception cref="T:System.ArgumentNullException">enumerable must be non-null</exception>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.IReadOnlyCollection{`1}}},System.Collections.Generic.IEqualityComparer{`0},System.Func{``0})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> class that contains 
            elements copied from the specified IEnumerable&lt;KeyValuePair&lt;TKey, IReadOnlyCollection&lt;TValue&gt;&gt;&gt;
            and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for the <typeparamref name="TKey"/> type.
            The internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="enumerable">IEnumerable to copy elements into this from</param>
            <param name="comparer">Specified comparer to use for the <typeparamref name="TKey"/>s</param>
            <param name="collectionFactory">A function to create a new <see cref="T:System.Collections.Generic.ICollection`1"/> to use
            in the internal dictionary store of this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />.</param> 
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <exception cref="T:System.InvalidOperationException"><paramref name="collectionFactory"/> must create collections with
            IsReadOnly set to true by default.</exception>
            <exception cref="T:System.ArgumentNullException">enumerable must be non-null</exception>
            <remarks>If <paramref name="comparer"/> is set to null, then the default <see cref="T:System.Collections.IEqualityComparer" /> for <typeparamref name="TKey"/> is used.</remarks>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Add(`0,`1)">
            <summary>
            Adds the specified <typeparamref name="TKey"/> and <typeparamref name="TValue"/> to the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.
            </summary>
            <param name="key">The <typeparamref name="TKey"/> of the element to add.</param>
            <param name="value">The <typeparamref name="TValue"/> of the element to add.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <c>null</c>.</exception>
            <remarks>
            Unlike the Add for <see cref="T:System.Collections.IDictionary" />, the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> Add will not
            throw any exceptions. If the given <typeparamref name="TKey"/> is already in the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>,
            then <typeparamref name="TValue"/> will be added to <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> associated with <paramref name="key"/>
            </remarks>
            <remarks>
            A call to this Add method will always invalidate any currently running enumeration regardless
            of whether the Add method actually modified the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.AddRange(`0,System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Adds a number of key-value pairs to this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>, where
            the key for each value is <paramref name="key"/>, and the value for a pair
            is an element from <paramref name="values"/>
            </summary>
            <param name="key">The <typeparamref name="TKey"/> of all entries to add</param>
            <param name="values">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of values to add</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> and <paramref name="values"/> must be non-null</exception>
            <remarks>
            A call to this AddRange method will always invalidate any currently running enumeration regardless
            of whether the AddRange method actually modified the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Remove(`0)">
            <summary>
            Removes every <typeparamref name="TValue"/> associated with the given <typeparamref name="TKey"/>
            from the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.
            </summary>
            <param name="key">The <typeparamref name="TKey"/> of the elements to remove</param>
            <returns><c>true</c> if the removal was successful; otherwise <c>false</c></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <c>null</c>.</exception>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Remove(`0,`1)">
            <summary>
            Removes the first instance (if any) of the given <typeparamref name="TKey"/>-<typeparamref name="TValue"/> 
            pair from this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>. 
            </summary>
            <param name="key">The <typeparamref name="TKey"/> of the element to remove</param>
            <param name="value">The <typeparamref name="TValue"/> of the element to remove</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> must be non-null</exception>
            <returns><c>true</c> if the removal was successful; otherwise <c>false</c></returns>
            <remarks>
            If the <typeparamref name="TValue"/> being removed is the last one associated with its <typeparamref name="TKey"/>, then that 
            <typeparamref name="TKey"/> will be removed from the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> and its 
            associated <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> will be freed as if a call to <see cref="M:System.Collections.Generic.MultiValueDictionary`2.Remove(`0)"/>
            had been made.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Contains(`0,`1)">
            <summary>
            Determines if the given <typeparamref name="TKey"/>-<typeparamref name="TValue"/> 
            pair exists within this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.
            </summary>
            <param name="key">The <typeparamref name="TKey"/> of the element.</param>
            <param name="value">The <typeparamref name="TValue"/> of the element.</param>
            <returns><c>true</c> if found; otherwise <c>false</c></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> must be non-null</exception>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.ContainsValue(`1)">
            <summary>
            Determines if the given <typeparamref name="TValue"/> exists within this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.
            </summary>
            <param name="value">A <typeparamref name="TValue"/> to search the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> for</param>
            <returns><c>true</c> if the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> contains the <paramref name="value"/>; otherwise <c>false</c></returns>      
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Clear">
            <summary>
            Removes every <typeparamref name="TKey"/> and <typeparamref name="TValue"/> from this 
            <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.ContainsKey(`0)">
            <summary>
            Determines if the given <typeparamref name="TKey"/> exists within this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> and has
            at least one <typeparamref name="TValue"/> associated with it.
            </summary>
            <param name="key">The <typeparamref name="TKey"/> to search the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> for</param>
            <returns><c>true</c> if the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> contains the requested <typeparamref name="TKey"/>;
            otherwise <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> must be non-null</exception>
        </member>
        <member name="P:System.Collections.Generic.MultiValueDictionary`2.Keys">
            <summary>
            Gets each <typeparamref name="TKey"/> in this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> that
            has one or more associated <typeparamref name="TValue"/>.
            </summary>
            <value>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing each <typeparamref name="TKey"/> 
            in this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> that has one or more associated 
            <typeparamref name="TValue"/>.
            </value>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.TryGetValue(`0,System.Collections.Generic.IReadOnlyCollection{`1}@)">
            <summary>
            Attempts to get the <typeparamref name="TValue"/> associated with the given
            <typeparamref name="TKey"/> and place it into <paramref name="value"/>.
            </summary>
            <param name="key">The <typeparamref name="TKey"/> of the element to retrieve</param>
            <param name="value">
            When this method returns, contains the <typeparamref name="TValue"/> associated with the specified
            <typeparamref name="TKey"/> if it is found; otherwise contains the default value of <typeparamref name="TValue"/>.
            </param>
            <returns>
            <c>true</c> if the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> contains an element with the specified 
            <typeparamref name="TKey"/>; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> must be non-null</exception>
        </member>
        <member name="P:System.Collections.Generic.MultiValueDictionary`2.Values">
            <summary>
            Gets an enumerable of <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> from this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>,
            where each <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> is the collection of every <typeparamref name="TValue"/> associated
            with a <typeparamref name="TKey"/> present in the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>. 
            </summary>
            <value>An IEnumerable of each <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> in this 
            <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/></value>
        </member>
        <member name="P:System.Collections.Generic.MultiValueDictionary`2.Item(`0)">
            <summary>
            Get every <typeparamref name="TValue"/> associated with the given <typeparamref name="TKey"/>. If 
            <paramref name="key"/> is not found in this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>, will 
            throw a <see cref="T:System.Collections.Generic.KeyNotFoundException"/>.
            </summary>
            <param name="key">The <typeparamref name="TKey"/> of the elements to retrieve.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> must be non-null</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"><paramref name="key"/> does not have any associated 
            <typeparamref name="TValue"/>s in this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.</exception>
            <value>
            An <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> containing every <typeparamref name="TValue"/>
            associated with <paramref name="key"/>.
            </value>
            <remarks>
            Note that the <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> returned will change alongside any changes 
            to the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> 
            </remarks>
        </member>
        <member name="P:System.Collections.Generic.MultiValueDictionary`2.Count">
            <summary>
            Returns the number of <typeparamref name="TKey"/>s with one or more associated <typeparamref name="TValue"/>
            in this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.
            </summary>
            <value>The number of <typeparamref name="TKey"/>s in this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.</value>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.GetEnumerator">
            <summary>
            Get an Enumerator over the <typeparamref name="TKey"/>-<see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/>
            pairs in this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.
            </summary>
            <returns>an Enumerator over the <typeparamref name="TKey"/>-<see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/>
            pairs in this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.</returns>
        </member>
        <member name="T:System.Collections.Generic.MultiValueDictionary`2.Enumerator">
            <summary>
            The Enumerator class for a <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>
            that iterates over <typeparamref name="TKey"/>-<see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/>
            pairs.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Enumerator.#ctor(System.Collections.Generic.MultiValueDictionary{`0,`1})">
            <summary>
            Constructor for the enumerator
            </summary>
            <param name="multiValueDictionary">A MultiValueDictionary to iterate over</param>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Enumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Enumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Enumerator.Dispose">
            <summary>
            Frees resources associated with this Enumerator
            </summary>
        </member>
        <member name="T:System.Collections.Generic.MultiValueDictionary`2.InnerCollectionView">
            <summary>
            An inner class that functions as a view of an ICollection within a MultiValueDictionary
            </summary>
        </member>
    </members>
</doc>
